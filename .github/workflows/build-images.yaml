---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Build Image"
on:
  workflow_call:
    inputs:
      matrix:
        required: false
        type: string
        default: "[]"
      publish:
        required: false
        type: boolean
        default: false

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  TEST_TAG: test

jobs:
  build-images:
    name: Build/Test ${{matrix.name}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: ${{ fromJSON(inputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test
        run: |
          echo ${{ matrix.name }}

      # Allow for more platforms to be built
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0

      # Login against a Docker registry except on PR
      - name: Log into registry ${{ env.REGISTRY }}
        if: ${{ inputs.publish }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.name }}

      # # Build the image
      - name: Build the Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.10.0
        with:
          context: apps/${{ matrix.name }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          load: true # Outputs the built image so it can be used in other steps
          tags: ${{ matrix.name }}-${{ env.TEST_TAG }}

      - name: Test
        run: |
          docker run --rm ${{matrix.name}}-${{ env.TEST_TAG }} ${{matrix.name}} --help

      # The linux/amd64 image is only built once in this workflow.
      # The image is built once, and the following steps use the
      # internal cache from the first Build and push step. The
      # second Build and push step only builds linux/arm64.
      - name: Build and push
        uses: docker/build-push-action@v6.10.0
        with:
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.publish }}
          context: apps/${{ matrix.name }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
